{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/profileInfo.module.css","components/Profile/Myposts/MyPosts.module.css","components/Profile/Myposts/MyPostsForm/MyPostsForm.module.css","components/Profile/Myposts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Myposts/MyPostsForm/MyPostsForm.jsx","components/Profile/Myposts/Post/Post.jsx","components/Profile/Myposts/MyPosts.jsx","components/Profile/Myposts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","ProfileStatus","props","useState","status","localStateStatus","setLocalStateStatus","localStateEditMode","setLocalStateEditMode","userId","useSelector","state","auth","id","useEffect","onDoubleClick","onChange","e","currentTarget","onFocus","event","target","select","autoFocus","onBlur","updateStatus","then","getStatus","ProfileInfo","profileFetching","userProfile","className","Classes","profileInformation","avatar","src","photos","large","one","aboutUser","infoAboutUser","fullName","aboutMe","contacts","instagram","lookingForAJobDescription","Preloader","isFetching","Textarea","Element","maxLength10","maxLengthCreator","MyPostsForm","postsBlock","onSubmit","handleSubmit","Field","name","component","placeholder","validate","requiredField","Post","item","message","messageItem","likes","likeCount","MyPostsReduxForm","reduxForm","form","MyPosts","postsElements","posts","map","post","text","addPost","connect","profilePage","Profile","MyPostsContainer","ProfileContainer","this","match","params","history","getUserProfile","React","Component","compose","isAuth","withRouter"],"mappings":"oJAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,0CIJtGC,EAAOC,QAAU,CAAC,mBAAqB,wCAAwC,OAAS,4BAA4B,UAAY,+BAA+B,cAAgB,qC,oBCA/KD,EAAOC,QAAU,CAAC,WAAa,8B,oBCA/BD,EAAOC,QAAU,CAAC,WAAa,kC,oBCA/BD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,OAAS,qBAAqB,QAAU,wB,6LC2DrEC,EAxDO,SAACC,GAAW,IAAD,EAEmBC,mBAASD,EAAME,QAFlC,mBAEtBC,EAFsB,KAEJC,EAFI,OAIuBH,oBAAS,GAJhC,mBAItBI,EAJsB,KAIFC,EAJE,KAMvBC,EAASC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKC,MA0B/C,OALAC,qBAAU,WACNR,EAAoBJ,EAAME,UAC3B,CAACF,EAAME,SAIN,iCACMG,GACE,8BACI,sBAAMQ,cAvBG,WACrBP,GAAsB,IAsBV,SAAwCN,EAAME,WAGrDG,GACG,8BACI,uBACIS,SAjCG,SAACC,GACpBX,EAAoBW,EAAEC,cAAcxB,QAiCpByB,QApBA,SAACC,GACjBA,EAAMC,OAAOC,UAoBGC,WAAW,EACX7B,MAAOW,EACPmB,OA7BO,WACvBhB,GAAsB,GACtBN,EAAMuB,aAAapB,GAClBqB,MAAK,WAAOxB,EAAMyB,UAAUlB,eCmBtBmB,EApCK,SAAC1B,GAAW,IAAD,EACDC,oBAAS,GAA5B0B,EADoB,oBAE3B,OAAK3B,EAAM4B,YAIH,sBAAKC,UAAWC,IAAQC,mBAAxB,UACI,qBAAKF,UAAWC,IAAQE,OAAxB,SACI,qBAAKC,IAAuC,MAAlCjC,EAAM4B,YAAYM,OAAOC,MAAgBnC,EAAM4B,YAAYM,OAAOC,MAAQC,QAExF,sBAAKP,UAAWC,IAAQO,UAAxB,UACI,qBAAKR,UAAWC,IAAQQ,cAAxB,SACI,6FAAmBtC,EAAM4B,YAAYW,cAEzC,qBAAKV,UAAWC,IAAQQ,cAAxB,SACI,2EAAgBtC,EAAM4B,YAAYY,aAEtC,qBAAKX,UAAWC,IAAQQ,cAAxB,SACI,kEAAsBtC,EAAM4B,YAAYa,SAASC,eAErD,qBAAKb,UAAWC,IAAQQ,cAAxB,SACI,6FAAmBtC,EAAM4B,YAAYe,+BAEzC,8BACI,cAAC,EAAD,CACAzC,OAAQF,EAAME,OACdqB,aAAcvB,EAAMuB,aACpBE,UAAWzB,EAAMyB,oBAxB1B,cAACmB,EAAA,EAAD,CAAWC,WAAYlB,K,sECJhCmB,EAAWC,YAAQ,YACnBC,EAAcC,YAAiB,IAsBtBC,EApBK,SAAClD,GACjB,OACI,qBAAK6B,UAAWC,IAAQqB,WAAxB,SACI,uBAAMC,SAAUpD,EAAMqD,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CACAC,KAAK,OACLC,UAAWV,EACXW,YAAY,kBACZC,SAAU,CAACC,IAAeX,OAG9B,8BACI,sD,kBCCLY,EAnBF,SAAC5D,GACV,OACM,sBAAK6B,UAAWC,IAAQ+B,KAAxB,UACE,qBAAKhC,UAAWC,IAAQE,OAAxB,SACE,qBAAKC,IAAKG,QAEZ,sBAAKP,UAAWC,IAAQgC,QAAxB,UACE,qBAAKjC,UAAWC,IAAQiC,YAAxB,SACG/D,EAAM8D,UAET,qBAAKjC,UAAWC,IAAQkC,MAAxB,SACE,+BAAO,SAAWhE,EAAMiE,qBCalCC,EAAmBC,YAAU,CAACC,KAAO,eAAlBD,CAAkCjB,GAE5CmB,EAxBC,SAACrE,GAEb,IAAIsE,EAAgBtE,EAAMuE,MAAMC,KAAI,SAAAC,GAAI,OACxC,cAAC,EAAD,CAAMX,QAASW,EAAKA,KAAMR,UAAWQ,EAAKR,WAAgBQ,EAAK9D,OAM/D,OACE,gCACE,qBAAKkB,UAAWC,IAAQqB,WAAxB,SACE,2CAEF,cAACe,EAAD,CAAkBd,SATL,SAACsB,GAChB1E,EAAM2E,QAAQD,EAAKA,SASjB,qBAAK7C,UAAWC,IAAQyC,MAAxB,SACGD,QCXIM,eANO,SAACnE,GACrB,MAAO,CACL8D,MAAQ9D,EAAMoE,YAAYN,SAIU,CAAEI,aAA3BC,CAAuCP,GCSvCS,EAdC,SAAC9E,GACb,OACE,gCACE,cAAC,EAAD,CACE4B,YAAa5B,EAAM4B,YACnB1B,OAAQF,EAAME,OACdqB,aAAcvB,EAAMuB,aACpBE,UAAWzB,EAAMyB,YAEnB,cAACsD,EAAD,Q,QCNFC,E,uKAEJ,WACE,IAAIzE,EAAS0E,KAAKjF,MAAMkF,MAAMC,OAAO5E,OAChCA,IAC6CA,EAAS0E,KAAKjF,MAAMW,KAEhEsE,KAAKjF,MAAMoF,QAAQ7F,KAAK,UAG9B0F,KAAKjF,MAAMqF,eAAe9E,GAC1B0E,KAAKjF,MAAMyB,UAAUlB,K,oBAGvB,WACE,OACE,8BACE,cAAC,EAAD,2BACM0E,KAAKjF,OADX,IAEE4B,YAAaqD,KAAKjF,MAAM4B,YACxB1B,OAAQ+E,KAAKjF,MAAME,OACnBqB,aAAc0D,KAAKjF,MAAMuB,aACzBE,UAAWwD,KAAKjF,MAAMyB,mB,GAtBD6D,IAAMC,WAqCtBC,sBACbZ,aARqB,SAACnE,GAAD,MAAY,CACjCmB,YAAcnB,EAAMoE,YAAYjD,YAChC6D,OAAShF,EAAMC,KAAK+E,OACpB9E,GAAKF,EAAMC,KAAKC,GAChBT,OAASO,EAAMoE,YAAY3E,UAIF,CAAEmF,mBAAgB5D,cAAWF,mBACtDmE,IAFaF,CAKbR","file":"static/js/3.09ce07d7.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInformation\":\"profileInfo_profileInformation__1f_LF\",\"avatar\":\"profileInfo_avatar__11C3x\",\"aboutUser\":\"profileInfo_aboutUser__3wpoa\",\"infoAboutUser\":\"profileInfo_infoAboutUser__JBuXS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1eqjM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPostsForm_postsBlock__22U-_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__26DLf\",\"avatar\":\"Post_avatar__16YnX\",\"message\":\"Post_message__2u7V7\"};","import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n// import Classes from './ProfileStatus.module.css'\r\n\r\nconst ProfileStatus = (props) => {\r\n\r\n    const [localStateStatus, setLocalStateStatus] = useState(props.status)\r\n\r\n    const [localStateEditMode, setLocalStateEditMode] = useState(false)\r\n\r\n    const userId = useSelector(state => state.auth.id)\r\n    \r\n\r\n    const onStatusChange = (e) => {\r\n        setLocalStateStatus(e.currentTarget.value)\r\n   }\r\n\r\n    const activateEditMode = () => {\r\n        setLocalStateEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setLocalStateEditMode(false)\r\n        props.updateStatus(localStateStatus)\r\n        .then(() => {props.getStatus(userId)})\r\n    }\r\n\r\n    const handleFocus = (event) => {\r\n        event.target.select(); /* выделить весь текст */\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLocalStateStatus(props.status)\r\n    }, [props.status])\r\n    \r\n    \r\n    return (\r\n        <div>\r\n            {!localStateEditMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status}</span>\r\n                </div>\r\n            }\r\n            {localStateEditMode &&\r\n                <div>\r\n                    <input \r\n                        onChange={onStatusChange}\r\n                        onFocus={handleFocus} /* выделить весь текст */\r\n                        autoFocus={true}\r\n                        value={localStateStatus} \r\n                        onBlur={deactivateEditMode}\r\n                        />\r\n                </div> \r\n            }\r\n           \r\n        </div>\r\n    )\r\n      \r\n}\r\n\r\nexport default ProfileStatus;","import React, { useState } from 'react'\r\nimport Classes from './profileInfo.module.css'\r\nimport one from '../../../images/avatars/one.png'\r\nimport Preloader from '../../common/Preloader/Preloader'\r\nimport ProfileStatus from './ProfileStatus/ProfileStatus'\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n    const [profileFetching] = useState(true); // My first hook :)\r\n    if (!props.userProfile) { \r\n        return <Preloader isFetching={profileFetching}/>\r\n    } else {\r\n        return (\r\n            <div className={Classes.profileInformation}>\r\n                <div className={Classes.avatar}>\r\n                    <img src={props.userProfile.photos.large != null ? props.userProfile.photos.large : one} />\r\n                </div>\r\n                <div className={Classes.aboutUser}>\r\n                    <div className={Classes.infoAboutUser}>\r\n                        <span>Полное имя: {props.userProfile.fullName}</span>\r\n                    </div>\r\n                    <div className={Classes.infoAboutUser}>\r\n                        <span>Обо мне: {props.userProfile.aboutMe}</span>\r\n                    </div>\r\n                    <div className={Classes.infoAboutUser}>\r\n                        <span>Мой instagram: {props.userProfile.contacts.instagram}</span>\r\n                    </div>\r\n                    <div className={Classes.infoAboutUser}>\r\n                        <span>Ищу работу: {props.userProfile.lookingForAJobDescription}</span>\r\n                    </div>\r\n                    <div>\r\n                        <ProfileStatus \r\n                        status={props.status /* || 'Hello' */} \r\n                        updateStatus={props.updateStatus}\r\n                        getStatus={props.getStatus}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    } \r\n}\r\n\r\nexport default ProfileInfo","import React from 'react'\r\nimport { Field } from 'redux-form'\r\nimport { maxLengthCreator, requiredField } from '../../../../utilits/validators/validators'\r\nimport { Element } from '../../../common/FormsControls/FormsControls'\r\nimport Classes from './MyPostsForm.module.css'\r\n\r\nconst Textarea = Element('textarea')\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst MyPostsForm = (props) => {\r\n    return (\r\n        <div className={Classes.postsBlock}>\r\n            <form onSubmit={props.handleSubmit}>\r\n                <div>\r\n                    <Field \r\n                    name='text' \r\n                    component={Textarea} \r\n                    placeholder='enter your post'\r\n                    validate={[requiredField, maxLength10]}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <button>Add post</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPostsForm","import React from 'react'\r\nimport Classes from './Post.module.css'\r\nimport one from './../../../../images/avatars/one.png'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n          <div className={Classes.item}>\r\n            <div className={Classes.avatar}>\r\n              <img src={one} />\r\n            </div>\r\n            <div className={Classes.message}>\r\n              <div className={Classes.messageItem}>\r\n                {props.message}\r\n              </div>\r\n              <div className={Classes.likes}>\r\n                <span>{'like: ' + props.likeCount}</span>\r\n              </div>   \r\n            </div>\r\n                    \r\n          </div>\r\n    ) \r\n}\r\n\r\nexport default Post","import React from 'react'\r\nimport { reduxForm } from 'redux-form'\r\nimport Classes from './MyPosts.module.css'\r\nimport MyPostsForm from './MyPostsForm/MyPostsForm'\r\nimport Post from './Post/Post'\r\n\r\nconst MyPosts = (props) => {\r\n    \r\n    let postsElements = props.posts.map(post => \r\n    <Post message={post.post} likeCount={post.likeCount} key={post.id}/>)\r\n\r\n    let addNewPost = (text) => {\r\n      props.addPost(text.text)\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className={Classes.postsBlock}>\r\n          <h3>myPosts</h3>\r\n        </div>\r\n        <MyPostsReduxForm onSubmit={addNewPost}/>\r\n        <div className={Classes.posts}>\r\n          {postsElements}\r\n        </div>\r\n      </div>\r\n    ) \r\n}\r\n\r\nconst MyPostsReduxForm = reduxForm({form : 'profilePost'})(MyPostsForm)\r\n\r\nexport default MyPosts","import React from 'react'\r\nimport { addPost, updateNewPostText } from '../../../redux/profileReducer'\r\nimport MyPosts from './MyPosts'\r\nimport {connect} from 'react-redux'\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts : state.profilePage.posts\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { addPost }) (MyPosts)","import React from 'react'\r\nimport Classes from './Profile.module.css'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\nimport MyPostsContainer from './Myposts/MyPostsContainer'\r\n\r\n\r\nconst Profile = (props) => {\r\n    return(\r\n      <div>\r\n        <ProfileInfo \r\n          userProfile={props.userProfile} \r\n          status={props.status}\r\n          updateStatus={props.updateStatus}\r\n          getStatus={props.getStatus}\r\n        />\r\n        <MyPostsContainer />\r\n      </div>\r\n    ) \r\n}\r\n\r\nexport default Profile","import axios from 'axios'\r\nimport React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router'\r\nimport { getStatus, getUserProfile, updateStatus } from '../../redux/profileReducer'\r\nimport Profile from './Profile'\r\n// import { withAuthRedirect } from '../../hoc/withAuthRedirect'\r\nimport { compose } from 'redux'\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId\r\n    if (!userId) {\r\n      /* this.props.id === null ? userId = 16152 :  */userId = this.props.id\r\n        if(!userId) {\r\n          this.props.history.push('/login')\r\n        }\r\n    }\r\n    this.props.getUserProfile(userId) /* sunk */\r\n    this.props.getStatus(userId)\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div>\r\n        <Profile \r\n          {...this.props} \r\n          userProfile={this.props.userProfile} \r\n          status={this.props.status}\r\n          updateStatus={this.props.updateStatus}\r\n          getStatus={this.props.getStatus}\r\n        />\r\n      </div>\r\n    ) \r\n  }\r\n   \r\n}\r\n\r\n let mapStateToProps = (state) => ({\r\n  userProfile : state.profilePage.userProfile,\r\n  isAuth : state.auth.isAuth,\r\n  id : state.auth.id,\r\n  status : state.profilePage.status\r\n})\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n  withRouter, /* Чтобы получить массив,\r\n  содержащий обьект с ид пользователя из адресной строки используем hoc withRouter*/\r\n  // withAuthRedirect /* hoc получение данных о авторизации */\r\n)(ProfileContainer)"],"sourceRoot":""}